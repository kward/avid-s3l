// Code generated by "stringer -output=signals_string.go -type=Dir,Conn,Fmt,Lvl signals_types.go"; DO NOT EDIT.

package signals

import "strconv"

const _Dir_name = "InputOutput"

var _Dir_index = [...]uint8{0, 5, 11}

func (i Dir) String() string {
	if i < 0 || i >= Dir(len(_Dir_index)-1) {
		return "Dir(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Dir_name[_Dir_index[i]:_Dir_index[i+1]]
}

const _Conn_name = "XLRJack"

var _Conn_index = [...]uint8{0, 3, 7}

func (i Conn) String() string {
	if i < 0 || i >= Conn(len(_Conn_index)-1) {
		return "Conn(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Conn_name[_Conn_index[i]:_Conn_index[i+1]]
}

const _Fmt_name = "AnalogAES"

var _Fmt_index = [...]uint8{0, 6, 9}

func (i Fmt) String() string {
	if i < 0 || i >= Fmt(len(_Fmt_index)-1) {
		return "Fmt(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Fmt_name[_Fmt_index[i]:_Fmt_index[i+1]]
}

const _Lvl_name = "LineMic"

var _Lvl_index = [...]uint8{0, 4, 7}

func (i Lvl) String() string {
	if i < 0 || i >= Lvl(len(_Lvl_index)-1) {
		return "Lvl(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Lvl_name[_Lvl_index[i]:_Lvl_index[i+1]]
}
