// Code generated by "stringer -output=signals_string.go -type=DirectionEnum,ConnectorEnum,FormatEnum,LevelEnum signals_types.go"; DO NOT EDIT.

package signals

import "strconv"

const _DirectionEnum_name = "unknownDirectionInputOutput"

var _DirectionEnum_index = [...]uint8{0, 16, 21, 27}

func (i DirectionEnum) String() string {
	if i < 0 || i >= DirectionEnum(len(_DirectionEnum_index)-1) {
		return "DirectionEnum(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DirectionEnum_name[_DirectionEnum_index[i]:_DirectionEnum_index[i+1]]
}

const _ConnectorEnum_name = "unknownConnectorXLRJack"

var _ConnectorEnum_index = [...]uint8{0, 16, 19, 23}

func (i ConnectorEnum) String() string {
	if i < 0 || i >= ConnectorEnum(len(_ConnectorEnum_index)-1) {
		return "ConnectorEnum(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ConnectorEnum_name[_ConnectorEnum_index[i]:_ConnectorEnum_index[i+1]]
}

const _FormatEnum_name = "unknownFormatAnalogAES"

var _FormatEnum_index = [...]uint8{0, 13, 19, 22}

func (i FormatEnum) String() string {
	if i < 0 || i >= FormatEnum(len(_FormatEnum_index)-1) {
		return "FormatEnum(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _FormatEnum_name[_FormatEnum_index[i]:_FormatEnum_index[i+1]]
}

const _LevelEnum_name = "unknownLevelLineMic"

var _LevelEnum_index = [...]uint8{0, 12, 16, 19}

func (i LevelEnum) String() string {
	if i < 0 || i >= LevelEnum(len(_LevelEnum_index)-1) {
		return "LevelEnum(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LevelEnum_name[_LevelEnum_index[i]:_LevelEnum_index[i+1]]
}
